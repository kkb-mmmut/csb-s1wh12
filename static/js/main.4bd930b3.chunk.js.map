{"version":3,"sources":["actions.js","App.js","reducer.js","index.js"],"names":["ADD_COUNT","SUBSTRACT_COUNT","addCount","store","dispatch","type","substractCount","App","props","count","getState","useState","toggle","className","onClick","value","initialState","createStore","state","applyMiddleware","next","action","console","log","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uMAAaA,G,MAAY,aACZC,EAAkB,kBAElBC,EAAW,SAACC,GACvBA,EAAMC,SAAS,CACbC,KAAML,GAEV,EAEaM,EAAiB,SAACH,GAC7BA,EAAMC,SAAS,CACbC,KAAMJ,GAEV,E,OCVe,SAASM,EAAIC,GAC1B,IAAQC,EAAUD,EAAML,MAAMO,WAAtBD,MACR,EAAwBE,mBAAS,GAAE,mBAArBC,GAAF,KAAQ,MASpB,OACE,sBAAKC,UAAU,MAAK,UAClB,+BAAI,UAAQJ,KACZ,+BACE,wBAAQK,QAZF,WACVZ,EAASM,EAAML,OACfS,GAAO,SAACG,GAAK,OAAa,EAARA,CAAS,GAC7B,EAS2B,SAAC,MACtB,wBAAQD,QATI,WAChBR,EAAeE,EAAML,OACrBS,GAAO,SAACG,GAAK,OAAa,EAARA,CAAS,GAC7B,EAMiC,SAAC,WAIpC,C,kBCtBMC,EAAe,CACnBP,MAAO,GCaT,IAMMN,EAAQc,aDhBC,WAAmD,IAA/BC,EAAK,uDAAGF,EACzC,QAD6D,wCAC9CX,MACb,KAAKL,EACH,OAAO,2BACFkB,GAAK,IACRT,MAAOS,EAAMT,MAAQ,IAEzB,KAAKR,EACH,OAAO,2BACFiB,GAAK,IACRT,MAAOS,EAAMT,MAAQ,IAEzB,QACE,OAAOS,EAEb,GCCsCC,aANvB,SAAH,GAAc,EAARf,SAAkB,EAARM,SAAQ,OAAO,SAACU,GAAI,OAAK,SAACC,GACpDC,QAAQC,IAAI,iBAAkBF,EAAOhB,MACjB,cAAhBgB,EAAOhB,MACTe,EAAKC,EAET,CAAE,CAAD,KAGKG,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAU,UACT,cAACrB,EAAG,CAACJ,MAAOA,MAEdqB,E","file":"static/js/main.4bd930b3.chunk.js","sourcesContent":["export const ADD_COUNT = \"ADD_COUNT\";\r\nexport const SUBSTRACT_COUNT = \"SUBSTRACT_COUNT\";\r\n\r\nexport const addCount = (store) => {\r\n  store.dispatch({\r\n    type: ADD_COUNT\r\n  });\r\n};\r\n\r\nexport const substractCount = (store) => {\r\n  store.dispatch({\r\n    type: SUBSTRACT_COUNT\r\n  });\r\n};\r\n","import \"./styles.css\";\nimport { addCount, substractCount } from \"./actions\";\nimport { useState } from \"react\";\nexport default function App(props) {\n  const { count } = props.store.getState();\n  const [value, toggle] = useState(0);\n  const add = () => {\n    addCount(props.store);\n    toggle((value) => value ^ 1);\n  };\n  const substract = () => {\n    substractCount(props.store);\n    toggle((value) => value ^ 1);\n  };\n  return (\n    <div className=\"App\">\n      <h1>Count: {count}</h1>\n      <h2>\n        <button onClick={add}>+</button>\n        <button onClick={substract}>-</button>\n      </h2>\n    </div>\n  );\n}\n","import { ADD_COUNT, SUBSTRACT_COUNT } from \"./actions\";\r\nconst initialState = {\r\n  count: 0\r\n};\r\n\r\nexport default function appReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ADD_COUNT:\r\n      return {\r\n        ...state,\r\n        count: state.count + 1\r\n      };\r\n    case SUBSTRACT_COUNT:\r\n      return {\r\n        ...state,\r\n        count: state.count - 1\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport appReducer from \"./reducer\";\n// const logger = function ({ dispatch, getState }) {\n//   return function (next) {\n//     return function (action) {\n//       //middleware codes\n//       console.log(\"ACTION_TYPE\", action.type);\n//       next(action);\n//     };\n//   };\n// };\nconst logger = ({ dispatch, getState }) => (next) => (action) => {\n  console.log(\"Action Type : \", action.type);\n  if (action.type === \"ADD_COUNT\") {\n    next(action);\n  }\n};\nconst store = createStore(appReducer, applyMiddleware(logger));\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App store={store} />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}